"use strict";
(() => {
  // node_modules/.pnpm/isomorphic-ws@5.0.0_ws@8.5.0/node_modules/isomorphic-ws/browser.js
  var ws = null;
  if (typeof WebSocket !== "undefined") {
    ws = WebSocket;
  } else if (typeof MozWebSocket !== "undefined") {
    ws = MozWebSocket;
  } else if (typeof global !== "undefined") {
    ws = global.WebSocket || global.MozWebSocket;
  } else if (typeof window !== "undefined") {
    ws = window.WebSocket || window.MozWebSocket;
  } else if (typeof self !== "undefined") {
    ws = self.WebSocket || self.MozWebSocket;
  }
  var browser_default = ws;

  // packages/dts-plugin/src/server/constant.ts
  var DEFAULT_WEB_SOCKET_PORT = 16322;
  var WEB_SOCKET_CONNECT_MAGIC_ID = "1hpzW-zo2z-o8io-gfmV1-2cb1d82";

  // packages/dts-plugin/src/server/message/Message.ts
  var Message = class {
    constructor(type, kind) {
      this.type = type;
      this.kind = kind;
      this.time = Date.now();
    }
  };

  // packages/dts-plugin/src/server/message/Action/Action.ts
  var Action = class extends Message {
    constructor(content, kind) {
      super("Action", kind);
      const { payload } = content;
      this.payload = payload;
    }
  };

  // packages/dts-plugin/src/server/message/Action/AddWebClient.ts
  var AddWebClientAction = class extends Action {
    constructor(payload) {
      super(
        {
          payload
        },
        "ADD_WEB_CLIENT" /* ADD_WEB_CLIENT */
      );
    }
  };

  // packages/dts-plugin/src/server/WebClient.ts
  var WebClient = class {
    constructor(options) {
      this._webSocket = null;
      this._name = options.name;
      this.logPrefix = options.logPrefix || "";
      this._connect();
    }
    _connect() {
      console.log(
        `${this.logPrefix}Trying to connect to {cyan ws://127.0.0.1:${DEFAULT_WEB_SOCKET_PORT}}...}`
      );
      this._webSocket = new browser_default(
        `ws://127.0.0.1:${DEFAULT_WEB_SOCKET_PORT}?WEB_SOCKET_CONNECT_MAGIC_ID=${WEB_SOCKET_CONNECT_MAGIC_ID}`
      );
      this._webSocket.onopen = () => {
        console.log(
          `${this.logPrefix}Connected to {cyan ws://127.0.0.1:${DEFAULT_WEB_SOCKET_PORT}} success!`
        );
        const startWebClient = new AddWebClientAction({
          name: this._name
        });
        this._webSocket && this._webSocket.send(JSON.stringify(startWebClient));
      };
      this._webSocket.onmessage = (message) => {
        console.log(message);
        const parsedMessage = JSON.parse(
          message.data.toString()
        );
        if (parsedMessage.type === "API") {
          if (parsedMessage.kind === "RELOAD_WEB_CLIENT" /* RELOAD_WEB_CLIENT */) {
            const {
              payload: { name }
            } = parsedMessage;
            if (name !== this._name) {
              return;
            }
            this._reload();
          }
        }
      };
      this._webSocket.onerror = (err) => {
        console.error(`${this.logPrefix}err: ${err}`);
      };
    }
    _reload() {
      console.log(`${this.logPrefix}reload`);
      location.reload();
    }
  };

  // packages/dts-plugin/src/server/launchWebClient.ts
  new WebClient(__WEB_CLIENT_OPTIONS__);
})();
