import { types, PluginObj, NodePath } from '@babel/core';

declare type PluginState = {
    refs: Set<NodePath<types.Identifier>>;
    opts: PluginOpts;
    removedNamedExports: Set<string>;
};
declare type PluginOpts = {
    namedExports?: string[];
    done?: (state: PluginState) => void;
};
declare function babelPluginEliminator({ types: t, }: {
    types: typeof types;
}): PluginObj<PluginState>;

export default babelPluginEliminator;
export { PluginOpts };
